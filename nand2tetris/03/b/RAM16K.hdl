// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM16K.hdl

/**
 * Memory of 16K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM16K {
    IN in[16], load, address[14];
    OUT out[16];

    PARTS:
    Mux8Way16(sel[0..1]=address[12..13], sel[2]=false, a=out0, b=out1, c=out2, d=out3, out=out);
    RAM4K(in=in, load=load0, address=address[0..11], out=out0);
    RAM4K(in=in, load=load1, address=address[0..11], out=out1);
    RAM4K(in=in, load=load2, address=address[0..11], out=out2);
    RAM4K(in=in, load=load3, address=address[0..11], out=out3);
    DMux8Way(in=true, sel[0..1]=address[12..13], sel[2]=false, a=r0, b=r1, c=r2, d=r3);
    And(a=r0, b=load, out=load0);
    And(a=r1, b=load, out=load1);
    And(a=r2, b=load, out=load2);
    And(a=r3, b=load, out=load3);
}